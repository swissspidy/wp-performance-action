name: 'WP Performance Tests'
description: 'Measure performance metrics for your WordPress project'
author: 'Pascal Birchler'
branding:
  color: 'blue'
  icon: 'trending-up'
inputs:
  github-token:
    description: 'The GitHub token used to create PR comments.'
    required: false
    default: ${{ github.token }}
  create-comment:
    description: 'Whether to create PR comments with performance results.'
    required: false
    default: ''
  debug:
    description: 'Whether to log additional debugging information.'
    default: ${{ runner.debug == '1' }}
  urls:
    required: true
    description: 'URLs to test, separated by newline.'
    default: ''
  plugins:
    required: false
    description: 'List of plugins to install, separated by newline. Supports directory paths and ZIP URLs.'
    default: ''
  themes:
    required: false
    description: 'List of themes to install, separated by newline. Supports directory paths and ZIP URLs.'
    default: ''
  active-theme:
    required: false
    description: 'Theme to activate for the test.'
    default: 'twentytwentyone'
  wp-version:
    required: false
    description: 'WordPress version to use.'
    default: 'latest'
  php-version:
    required: false
    description: 'PHP version to use.'
    default: 'auto'
  shard:
    required: false
    description: 'Shard to use if running tests in parallel in a matrix.'
    default: ''
  repetitions:
    required: false
    description: 'Number of times the tests should be repeated.'
    default: '2'
  iterations:
    required: false
    description: 'Number of iterations (loops) within a single run.'
    default: '20'
  action:
    description: 'Action to perform, can be either "test" or "merge".'
    required: false
    default: 'test'
  previous-results:
    description: 'Path to a file with previous performance results for comparison.'
    required: false
    default: ''
outputs:
  results:
    description: "Path to a file with raw results"
    value: ${{ steps.share-results.outputs.results }}
  blob-report:
    description: "Path to the blob report folder"
    value: ${{ steps.share-blob-report.outputs.blob-report }}
runs:
  using: "composite"
  steps:
    # Works around https://github.com/actions/upload-artifact/issues/176
    - name: Resolve action_path
      run: echo "ABS_ACTION_PATH=$(realpath ${{ github.action_path }})" >> $GITHUB_ENV
      shell: 'bash'

    # setup-node expects paths relative to checked-out repo,
    # but we want to use .nvmrc from action repo.
    # So we provide a path relative to $GITHUB_WORKSPACE
    # See https://github.com/actions/setup-node/issues/852
    - name: Get relative action_path
      run: |
        REL_ACTION_PATH=$(node -p 'require("path").relative(process.env.GITHUB_WORKSPACE, process.env.ABS_ACTION_PATH)')
        REL_ACTION_PATH=${REL_ACTION_PATH:-.}
        echo "REL_ACTION_PATH=$REL_ACTION_PATH" >> $GITHUB_ENV
      shell: 'bash'

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: ${{ env.REL_ACTION_PATH }}/env/.nvmrc
        # Disable caching as it is not supported outside $GITHUB_WORKSPACE
        cache: ''

    - name: Install dependencies
      run: npm ci ${{ inputs.debug != 'true' && '--silent' }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Install Playwright Browsers
      run: npx ${{ inputs.debug != 'true' && '--silent' }} playwright install --with-deps
      if: ${{ inputs.action == 'test' }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Prepare wp-env
      run: |
        echo "Preparing wp-env..."

        PLUGINS=${PLUGINS%$'\n'}
        THEMES=${THEMES%$'\n'}

        IFS=$'\n';

        PLUGINS=($PLUGINS)
        THEMES=($THEMES)

        PLUGINS_ARRAY=()
        for i in "${PLUGINS[@]}"; do
          if [ ! -z i ]; then
            if [[ "$i" == *"http"* ]]; then
              PLUGINS_ARRAY+=($i)
            else
              PLUGINS_ARRAY+=$(realpath $i)
            fi
          fi
        done

        PLUGINS=$(printf "%s\n" "${PLUGINS_ARRAY[@]}")

        THEMES_ARRAY=()
        for i in "${THEMES[@]}"; do
          if [ ! -z i ]; then
            if [[ "$i" == *"http"* ]]; then
              THEMES_ARRAY+=($i)
            else
              THEMES_ARRAY+=$(realpath $i)
            fi
          fi
        done

        THEMES=$(printf "%s\n" "${THEMES_ARRAY[@]}")

        unset IFS;

        REQUIRED_PLUGINS=$(cat <<-END
        https://downloads.wordpress.org/plugin/wordpress-importer.zip
        https://downloads.wordpress.org/plugin/performance-lab.zip
        END
        )
        REQUIRED_THEMES=$(cat <<-END
        https://downloads.wordpress.org/theme/twentytwentyone.zip
        https://downloads.wordpress.org/theme/twentytwentythree.zip
        END
        )

        if [[ $WP_VERSION == 'latest' ]]; then
          WP_VERSION=null
        elif [[ "$WP_VERSION" == "trunk" ]]; then
          WP_VERSION="\"WordPress/WordPress#master\""
        elif [[ "$WP_VERSION" == "nightly" ]]; then
          WP_VERSION="\"https://wordpress.org/nightly-builds/wordpress-latest.zip"\"
        elif [[ "$WP_VERSION" == *".zip"* ]]; then
          WP_VERSION="\"$WP_VERSION\""
        else
          WP_VERSION="\"WordPress/WordPress#$WP_VERSION\""
        fi

        if [[ $PHP_VERSION == 'auto' ]]; then
          PHP_VERSION=null
        else
          PHP_VERSION="\"$PHP_VERSION\""
        fi

        jq -n \
        --argjson wp "$WP_VERSION" \
        --argjson php "$PHP_VERSION" \
        --arg rp "$REQUIRED_PLUGINS" \
        --arg p "$PLUGINS" \
        --arg t "$THEMES" \
        --arg rt "$REQUIRED_THEMES" \
        '{core: $wp, phpVersion: $php, plugins: [($rp | split("\n")), ($p | split("\n"))] | add, themes: [($rt | split("\n")), ($t | split("\n"))] | add}' \
        > ${{ env.ABS_ACTION_PATH }}/env/.wp-env.override.json
        
        if [[ ${{ inputs.debug == 'true' }} == true ]]; then
          echo "Generated .wp-env.override.json file:"
          cat ${{ env.ABS_ACTION_PATH }}/env/.wp-env.override.json
        fi
      if: ${{ inputs.action == 'test' }}
      env:
        PLUGINS: ${{ inputs.plugins }}
        THEMES: ${{ inputs.themes }}
        WP_VERSION: ${{ inputs.wp-version }}
        PHP_VERSION: ${{ inputs.php-version }}
      shell: 'bash'

    - name: Start WordPress
      run: npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env start
      if: ${{ inputs.action == 'test' }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Update permalink structure
      run: npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env run tests-cli wp rewrite structure '/%postname%/' -- --hard
      if: ${{ inputs.action == 'test' }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Import mock data
      run: |
        npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env run tests-cli wp plugin list
        npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env run tests-cli curl -s https://raw.githubusercontent.com/WordPress/theme-test-data/b9752e0533a5acbb876951a8cbb5bcc69a56474c/themeunittestdata.wordpress.xml -- --output /tmp/themeunittestdata.wordpress.xml
        npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env run tests-cli wp import /tmp/themeunittestdata.wordpress.xml -- --authors=create --quiet
        npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env run tests-cli wp plugin deactivate wordpress-importer --quiet
      if: ${{ inputs.action == 'test' }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Prepare test site
      run: |
        npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env run tests-cli wp theme activate $THEME --quiet
        npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env run tests-cli wp config set WP_HTTP_BLOCK_EXTERNAL true --raw --type=constant
        npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env run tests-cli wp config set DISABLE_WP_CRON true --raw --type=constant
      if: ${{ inputs.action == 'test' }}
      env:
        THEME: ${{ inputs.active-theme }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: List defined constants
      run: npm run ${{ inputs.debug != 'true' && '--silent' }} wp-env run tests-cli wp config list --path=/var/www/${{ env.LOCAL_DIR }}
      if: ${{ inputs.action == 'test' && inputs.debug == 'true' }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Run tests
      run: npm run ${{ inputs.debug != 'true' && '--silent' }} test:performance $ADDITIONAL_ARGS
      if: ${{ inputs.action == 'test' }}
      env:
        WP_ARTIFACTS_PATH: ${{ github.action_path }}/env/artifacts
        BLOB_REPORT_PATH: ${{ github.action_path }}/env/blob-report
        SHARD: ${{ inputs.shard != '1/1' && inputs.shard || '' }}
        ADDITIONAL_ARGS: ${{ inputs.shard != '1/1' && format('-- --shard={0}', inputs.shard) || '' }}
        URLS_TO_TEST: ${{ inputs.urls }}
        DEBUG: ${{ inputs.debug == 'true' }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Download blob reports from GitHub Actions Artifacts
      uses: actions/download-artifact@v3
      if: ${{ inputs.action == 'merge' }}
      id: download
      with:
        name: performance-blob-report
        path: performance-blob-report

    - name: Merge into single performance report
      run: npm run ${{ inputs.debug != 'true' && '--silent' }} test:performance:merge-reports ${{steps.download.outputs.download-path}}
      if: ${{ inputs.action == 'merge' }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Print results
      run: |
        if [ ! -z $PREVIOUS_RESULTS ] && [ -f $PREVIOUS_RESULTS ]; then
          npm run ${{ inputs.debug != 'true' && '--silent' }} test:performance:results $WP_ARTIFACTS_PATH/performance-results.json $PREVIOUS_RESULTS
        else
          npm run ${{ inputs.debug != 'true' && '--silent' }} test:performance:results
        fi;
      if: ${{ inputs.action == 'test' || inputs.action == 'merge' }}
      env:
        WP_ARTIFACTS_PATH: ${{ github.action_path }}/env/artifacts
        PREVIOUS_RESULTS: ${{ inputs.previous-results }}
        REPOSITORY_URL: ${{ github.server_url }}/${{ github.repository }}
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Add workflow summary
      run: cat $WP_ARTIFACTS_PATH/performance-results.md >> $GITHUB_STEP_SUMMARY
      if: ${{ ( inputs.action == 'test' || inputs.action == 'merge' ) && ! inputs.shard }}
      env:
        WP_ARTIFACTS_PATH: ${{ github.action_path }}/env/artifacts
      shell: 'bash'
      working-directory: ${{ github.action_path }}/env

    - name: Check if a comment was already made
      id: find-comment
      if: ${{ inputs.create-comment == 'true' }}
      uses: peter-evans/find-comment@a54c31d7fa095754bfef525c0c8e5e5674c4b4b1
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body-includes: Performance test results for

    - name: Comment on PR with test results
      uses: peter-evans/create-or-update-comment@c6c9a1a66007646a28c153e2a8580a5bad27bcfa
      if: ${{ inputs.create-comment == 'true' }}
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        edit-mode: replace
        body-path: ${{ github.action_path }}/env/artifacts/performance-results.md
        token: ${{ inputs.github-token }}

    - name: Share raw results
      id: share-results
      run: echo "results=$WP_ARTIFACTS_PATH/performance-results.json" >> $GITHUB_OUTPUT
      if: ${{ ( inputs.action == 'test' || inputs.action == 'merge' ) && ! inputs.shard }}
      env:
        WP_ARTIFACTS_PATH: ${{ github.action_path }}/env/artifacts
      shell: 'bash'

    - name: Share blob report
      id: share-blob-report
      run: echo "blob-report=$BLOB_REPORT_PATH" >> $GITHUB_OUTPUT
      if: ${{ inputs.shard != '' }}
      env:
        BLOB_REPORT_PATH: ${{ github.action_path }}/env/blob-report
      shell: 'bash'

    - name: Upload performance results
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      if: ${{ success() && ( inputs.action == 'test' || inputs.action == 'merge' ) && ! inputs.shard }}
      with:
        name: performance-results
        path: ${{ env.ABS_ACTION_PATH }}/env/artifacts/performance-results.json

    - name: Upload blob report
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      if: ${{ success() && inputs.shard != '' }}
      with:
        name: performance-blob-report
        path: ${{ env.ABS_ACTION_PATH }}/env/blob-report
        retention-days: 1
